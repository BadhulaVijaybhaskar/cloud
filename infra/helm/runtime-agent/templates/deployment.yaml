apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "runtime-agent.fullname" . }}
  labels:
    {{- include "runtime-agent.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "runtime-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "runtime-agent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "runtime-agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          env:
            - name: KUBECONFIG
              value: "/etc/kubeconfig/config"
            - name: LOG_LEVEL
              value: {{ .Values.config.logLevel | quote }}
            - name: MAX_CONCURRENT_EXECUTIONS
              value: {{ .Values.config.maxConcurrentExecutions | quote }}
            - name: EXECUTION_TIMEOUT
              value: {{ .Values.config.executionTimeout | quote }}
          {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            {{- toYaml .Values.healthCheck.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.healthCheck.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: logs
              mountPath: {{ .Values.persistence.mountPath }}
            - name: tmp
              mountPath: /tmp
            {{- if .Values.config.kubeconfig }}
            - name: kubeconfig
              mountPath: /etc/kubeconfig
              readOnly: true
            {{- end }}
      volumes:
        - name: logs
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "runtime-agent.fullname" . }}-logs
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: tmp
          emptyDir: {}
        {{- if .Values.config.kubeconfig }}
        - name: kubeconfig
          secret:
            secretName: {{ include "runtime-agent.fullname" . }}-kubeconfig
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}