name: CI/CD with Image Signing

on:
  push:
    branches: [ main, prod-hardening/* ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE_LANGGRAPH: naksha/langgraph:${{ github.sha }}
  DOCKER_IMAGE_VECTOR: naksha/vector:${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and start services
      run: |
        cp .env.example .env
        docker compose up --build -d
        sleep 30

    - name: Run E2E tests
      run: |
        cd e2e-tests
        node test.js

    - name: Tear down
      run: docker compose down

  build-and-sign:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3
      with:
        cosign-release: 'v2.2.0'

    - name: Build LangGraph image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE_LANGGRAPH }} services/langgraph/
        docker push ${{ env.DOCKER_IMAGE_LANGGRAPH }}

    - name: Build Vector image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE_VECTOR }} services/vector/
        docker push ${{ env.DOCKER_IMAGE_VECTOR }}

    - name: Sign Docker image (LangGraph)
      run: cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${{ env.DOCKER_IMAGE_LANGGRAPH }}
      env:
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

    - name: Sign Docker image (Vector)
      run: cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${{ env.DOCKER_IMAGE_VECTOR }}
      env:
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

    - name: Verify signed images
      run: |
        cosign verify --key env://COSIGN_PUBLIC_KEY ${{ env.DOCKER_IMAGE_LANGGRAPH }}
        cosign verify --key env://COSIGN_PUBLIC_KEY ${{ env.DOCKER_IMAGE_VECTOR }}
      env:
        COSIGN_PUBLIC_KEY: ${{ secrets.COSIGN_PUBLIC_KEY }}

  security-scan:
    needs: build-and-sign
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.DOCKER_IMAGE_LANGGRAPH }}
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'